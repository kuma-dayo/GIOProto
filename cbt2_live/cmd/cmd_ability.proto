syntax = "proto3";

package proto;

import "define.proto";
import "cmd/cmd_fight.proto";

message AbilityInvokeEntryHead {
    uint32 instanced_ability_id = 1;
    uint32 instanced_modifier_id = 2;
    int32 local_id = 3;
    int32 modifier_config_local_id = 4;
    uint32 target_id = 5;
}

message AbilityInvokeEntry {
    AbilityInvokeEntryHead head = 1;
    AbilityInvokeArgument argument_type = 2;
    bytes ability_data = 3;
}

message AbilityInvocationFixedNotify {
    ForwardType forward_type = 1;
    uint32 forward_peer = 2;
    repeated uint32 forward_peers = 3;
    uint32 entity_id = 4;
    AbilityInvokeEntry invoke1st = 5;
    AbilityInvokeEntry invoke2nd = 6;
    AbilityInvokeEntry invoke3rd = 7;
    AbilityInvokeEntry invoke4th = 8;
    AbilityInvokeEntry invoke5th = 9;
    AbilityInvokeEntry invoke6th = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1101;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message AbilityInvocationsNotify {
    ForwardType forward_type = 1;
    uint32 forward_peer = 2;
    repeated uint32 forward_peers = 3;
    uint32 entity_id = 4;
    repeated AbilityInvokeEntry invokes = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1102;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message AbilityMetaReInitOverrideMap {
    repeated AbilityScalarValueEntry override_map = 1;
}

message AbilityMetaAddAbility {
    AbilityAppliedAbility ability = 1;
}

message ModifierProperty {
    AbilityString key = 1;
    float value = 2;
}

message AbilityMetaModifierChange {
    ModifierAction action = 1;
    AbilityString parent_ability_name = 2;
    AbilityString parent_ability_override = 3;
    AbilityAttachedModifier attached_instanced_modifier = 4;
    repeated ModifierProperty properties = 5;
    int32 modifier_local_id = 6;
    bool is_mute_remote = 7;
    uint32 apply_entity_id = 8;
    bool is_attached_parent_ability = 9;
}

message AbilityMetaSpecialFloatArgument {
    float argument_value = 1;
    bool is_on = 2;
}

message AbilityMetaAddOrGetAbilityAndTrigger {
    AbilityString ability_name = 1;
    AbilityString ability_override = 2;
    float trigger_argument = 3;
}

message AbilityMetaSetKilledState {
    bool killed = 1;
}

message AbilityMetaSetAbilityTrigger {
    uint32 trigger_ability_entity_id = 1;
}

message AbilityMetaSetModifierApplyEntityId {
    uint32 apply_entity_id = 1;
}

message AbilityMetaModifierDurabilityChange {
    float reduce_durability = 1;
    float remain_durability = 2;
}

message AbilityActionTriggerAbility {
    uint32 other_id = 1;
}

message AbilityActionSetCrashDamage {
    float damage = 1;
    Vector hit_pos = 2;
}

message AbilityBornType {
    Vector pos = 1;
    Vector rot = 2;
}

message AbilityActionSummon {
    Vector pos = 1;
    Vector rot = 2;
}

message AbilityActionBlink {
    Vector pos = 1;
    Vector rot = 2;
}

message AbilityActionCreateGadget {
    Vector pos = 1;
    Vector rot = 2;
    uint32 room_id = 3;
}

message AbilityApplyLevelModifier {
    uint32 apply_entity_id = 1;
}

message AbilityActionCreateItem {
    Vector pos = 1;
    Vector rot = 2;
    uint32 room_id = 3;
}

message AbilityMixinEmpty {
    
}

message AbilityMixinAvatarSteerByCamera {
    Vector target_pos = 1;
    Vector target_dir = 2;
}

message AbilityMixinWindZone {
    repeated uint32 entity_ids = 1;
}

message AbilityMixinCostStamina {
    bool is_swim = 1;
}

message AbilityMixinEliteShield {
    float sub_shield = 1;
}

message AbilityMixinElementShield {
    float sub_shield = 1;
    bool is_shield_broken = 2;
    float shield = 3;
    float max_shield = 4;
    uint32 absorb_type = 5;
}

message AbilityMixinGlobalShield {
    float sub_shield = 1;
}

message ClientAbilityInitBeginNotify {
    uint32 entity_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1103;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ClientAbilityInitFinishNotify {
    uint32 entity_id = 1;
    repeated AbilityInvokeEntry invokes = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1104;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message AbilityInvocationFailNotify {
    uint32 entity_id = 1;
    AbilityInvokeEntry invoke = 2;
    string reason = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1105;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AbilityResetReason {
    AbilityResetReasonType reason_type = 1;
    uint32 param = 2;
}

message AvatarAbilityResetNotify {
    uint32 entity_id = 1;
    AbilityResetReason reset_reason = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1106;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message EntityAbilityInvokeEntry {
    uint32 entity_id = 1;
    repeated AbilityInvokeEntry invokes = 2;
}

message ClientAbilitiesInitFinishCombineNotify {
    repeated EntityAbilityInvokeEntry entity_invoke_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1107;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ElementReactionLog {
    uint32 source_id = 1;
    uint32 target_id = 2;
    string ability_name = 3;
    string modifier_name = 4;
    string anim_event_id = 5;
    string attack_tag = 6;
    uint32 reaction_type = 7;
    uint32 count = 8;
    uint32 source_lv = 9;
    uint32 target_lv = 10;
    Vector pos = 11;
    uint32 time = 12;
}

message ElementReactionLogNotify {
    repeated ElementReactionLog log_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1108;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

enum AbilityInvokeArgument {
    ABILITY_NONE = 0;
    ABILITY_META_MODIFIER_CHANGE = 1;
    ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;
    ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3;
    ABILITY_META_OVERRIDE_PARAM = 4;
    ABILITY_META_CLEAR_OVERRIDE_PARAM = 5;
    ABILITY_META_REINIT_OVERRIDEMAP = 6;
    ABILITY_META_GLOBAL_FLOAT_VALUE = 7;
    ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;
    ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9;
    ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;
    ABILITY_META_SET_KILLED_SETATE = 11;
    ABILITY_META_SET_ABILITY_TRIGGER = 12;
    ABILITY_META_ADD_NEW_ABILITY = 13;
    ABILITY_META_REMOVE_ABILITY = 14;
    ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15;
    ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16;
    ABILITY_ACTION_TRIGGER_ABILITY = 50;
    ABILITY_ACTION_SET_CRASH_DAMAGE = 51;
    ABILITY_ACTION_EFFECT = 52;
    ABILITY_ACTION_SUMMON = 53;
    ABILITY_ACTION_BLINK = 54;
    ABILITY_ACTION_CREATE_GADGET = 55;
    ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56;
    ABILITY_ACTION_CREATE_ITEM = 57;
    ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100;
    ABILITY_MIXIN_MONSTER_DEFEND = 101;
    ABILITY_MIXIN_WIND_ZONE = 102;
    ABILITY_MIXIN_COST_STAMINA = 103;
    ABILITY_MIXIN_ELITE_SHIELD = 104;
    ABILITY_MIXIN_ELEMENT_SHIELD = 105;
    ABILITY_MIXIN_GLOBAL_SHIELD = 106;
}

enum ModifierAction {
    ADDED = 0;
    REMOVED = 1;
}

enum AbilityResetReasonType {
    ABILITY_CHANGE_SKILL_DEPOT = 0;
    ABILITY_UNLOCK_TALENT = 1;
    ABILITY_CHANGE_EQUIP = 2;
    ABILITY_PROUD_SKILL = 3;
    ABILITY_AVATAR_SKILL = 4;
    ABILITY_CORE_PROUD_SKILL = 5;
    ABILITY_TALENT_EXTRA_LEVEL = 6;
}
