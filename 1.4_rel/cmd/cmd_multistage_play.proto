syntax = "proto3";

package proto;

import "define.proto";

message InBattleMechanicusBuildingInfo {
    uint32 building_id = 1;
    uint32 level = 2;
    uint32 cost_points = 3;
    uint32 refund_points = 4;
}

message InBattleMechanicusPlayerInfo {
    uint32 uid = 1;
    uint32 building_points = 2;
    repeated InBattleMechanicusBuildingInfo building_list = 3;
    uint32 pick_card_id = 4;
    bool is_card_confirmed = 5;
}

message InBattleMechanicusMonsterInfo {
    uint32 monster_id = 1;
    uint32 count = 2;
    uint32 level = 3;
}

message InBattleMechanicusCardInfo {
    uint32 card_id = 1;
    uint32 cost_points = 2;
    uint32 rand_effect_id = 3;
    uint32 begin_round = 4;
    uint32 end_round = 5;
    InBattleMechanicusCardChallengeState challenge_state = 6;
}

message InBattleMechanicusInfo {
    InBattleMechanicusStageType stage = 1;
    uint64 begin_time_ms = 2;
    uint64 duration_ms = 3;
    uint32 round = 4;
    uint32 total_round = 5;
    uint32 left_monster = 6;
    repeated InBattleMechanicusMonsterInfo monster_list = 7;
    repeated InBattleMechanicusPlayerInfo player_list = 8;
    uint32 excaped_monster_num = 9;
    uint32 max_excape_monster_num = 10;
    uint32 building_stage_duration = 11;
    repeated InBattleMechanicusCardInfo pick_card_list = 12;
    repeated InBattleMechanicusCardInfo history_card_list = 13;
    uint64 wait_begin_time_us = 14;
    uint32 wait_seconds = 15;
    repeated uint32 entrance_list = 16;
    repeated uint32 exit_list = 17;
}

message InBattleFleurFairInfo {
    repeated uint32 ability_group_id_list = 1;
    repeated uint32 gallery_id_list = 2;
    uint32 preview_stage_index = 3;
    uint32 preview_display_duration = 4;
    uint32 gallery_stage_index = 5;
}

message MultistagePlayInfo {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint32 stage_index = 3;
    uint32 stage_type = 4;
    uint32 begin_time = 5;
    uint32 duration = 6;
    uint32 play_type = 7;
    
    oneof detail {
        InBattleMechanicusInfo mechanicus_info = 101;
        InBattleFleurFairInfo fleur_fair_info = 102;
    }
}

message MultistagePlayInfoNotify {
    MultistagePlayInfo info = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5301;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MultistagePlayFinishStageReq {
    uint32 play_index = 1;
    uint32 group_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5302;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message InBattleMechanicusExcapeMonsterNotify {
    uint32 excaped_monster_num = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5305;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusLeftMonsterNotify {
    uint32 left_monster = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5306;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusBuildingPointsNotify {
    map<uint32, uint32> player_building_points_map = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5307;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusPickCardReq {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint32 card_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5308;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message InBattleMechanicusPickCardRsp {
    int32 retcode = 1;
    uint32 play_index = 2;
    uint32 group_id = 3;
    uint32 card_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5309;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusPickCardNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint32 player_uid = 3;
    uint32 card_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5310;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusConfirmCardReq {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint32 card_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5311;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message InBattleMechanicusConfirmCardRsp {
    int32 retcode = 1;
    uint32 play_index = 2;
    uint32 group_id = 3;
    uint32 card_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5312;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusConfirmCardNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint32 player_uid = 3;
    uint32 card_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5313;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message InBattleMechanicusCardResultNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    uint64 wait_begin_time_us = 3;
    uint32 wait_seconds = 4;
    repeated InBattleMechanicusCardInfo card_list = 5;
    map<uint32, uint32> player_confirmed_card_map = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5314;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MultistagePlayFinishStageRsp {
    int32 retcode = 1;
    uint32 play_index = 2;
    uint32 group_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5315;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MultistageSettleWatcherInfo {
    uint32 watcher_id = 1;
    uint32 cur_progress = 2;
    uint32 total_progress = 3;
    bool is_inverse = 4;
}

message InBattleMechanicusSettleNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    repeated MultistageSettleWatcherInfo watcher_list = 3;
    uint32 total_token = 4;
    uint32 real_token = 5;
    uint32 difficulty_percentage = 6;
    bool is_success = 7;
    uint64 scene_time_ms = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5316;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MultistagePlayStageEndNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5399;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MultistagePlayEndNotify {
    uint32 play_index = 1;
    uint32 group_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5400;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FleurFairBuffEnergyNotify {
    uint32 energy = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5341;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FleurFairGallerySettleInfo {
    bool is_success = 1;
    uint32 energy = 2;
    uint32 gallery_stage_count = 3;
    uint32 gallery_stage_index = 4;
    map<uint32, int32> energy_stat_map = 5;
}

message FleurFairPlayerStatInfo {
    uint32 uid = 1;
    uint32 stat_id = 2;
    int32 param = 3;
    uint32 head_image = 4;
    string nick_name = 5;
    string online_id = 6;
}

message FleurFairBossSettleInfo {
    bool is_success = 1;
    uint32 cost_time = 2;
    uint32 energy = 3;
    repeated FleurFairPlayerStatInfo stat_info_list = 4;
    uint32 reward_token_num = 5;
}

message FleurFairStageSettleNotify {
    uint32 stage_type = 1;
    
    oneof detail {
        FleurFairGallerySettleInfo gallery_settle_info = 11;
        FleurFairBossSettleInfo boss_settle_info = 12;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5342;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FleurFairFinishGalleryStageNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5343;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum MultistagePlayType {
    MULTISTAGE_PLAY_TYPE_NON = 0;
    MULTISTAGE_PLAY_TYPE_MECHANICUS = 1;
    MULTISTAGE_PLAY_TYPE_FLEUR_FAIR = 2;
}

enum InBattleMechanicusStageType {
    IN_BATTLE_MECHANICUS_STAGE_NONE = 0;
    IN_BATTLE_MECHANICUS_STAGE_BUILD = 1;
    IN_BATTLE_MECHANICUS_STAGE_CARD_FLIP = 2;
    IN_BATTLE_MECHANICUS_STAGE_KILL = 3;
}

enum InBattleMechanicusCardChallengeState {
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_NONE = 0;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_ON_GOING = 1;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_FAIL = 2;
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_SUCCESS = 3;
}
