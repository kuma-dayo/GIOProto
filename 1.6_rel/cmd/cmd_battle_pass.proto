syntax = "proto3";

package proto;

import "define.proto";

message BattlePassCycle {
    uint32 cycle_idx = 1;
    uint32 begin_time = 2;
    uint32 end_time = 3;
}

message BattlePassMission {
    uint32 mission_id = 1;
    uint32 cur_progress = 2;
    uint32 total_progress = 3;
    uint32 reward_battle_pass_point = 4;
    uint32 mission_type = 5;
    
    MissionStatus mission_status = 6;
    enum MissionStatus {
        MISSION_INVALID = 0;
        MISSION_UNFINISHED = 1;
        MISSION_FINISHED = 2;
        MISSION_POINT_TAKEN = 3;
    }
}

message BattlePassRewardTag {
    BattlePassUnlockStatus unlock_status = 1;
    uint32 level = 2;
    uint32 reward_id = 3;
}

message BattlePassProduct {
    string normal_product_id = 1;
    string extra_product_id = 2;
    string upgrade_product_id = 3;
}

message BattlePassSchedule {
    uint32 schedule_id = 1;
    uint32 level = 2;
    uint32 point = 3;
    BattlePassUnlockStatus unlock_status = 4;
    repeated BattlePassRewardTag reward_taken_list = 5;
    uint32 begin_time = 6;
    uint32 end_time = 7;
    BattlePassCycle cur_cycle = 8;
    bool is_extra_paid_reward_taken = 9;
    BattlePassProduct product_info = 10;
    bool is_viewed = 11;
    uint32 cur_cycle_points = 12;
}

message BattlePassAllDataNotify {
    bool have_cur_schedule = 1;
    BattlePassSchedule cur_schedule = 2;
    repeated BattlePassMission mission_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2603;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BattlePassMissionUpdateNotify {
    repeated BattlePassMission mission_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2643;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BattlePassMissionDelNotify {
    repeated uint32 del_mission_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2627;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BattlePassCurScheduleUpdateNotify {
    bool have_cur_schedule = 1;
    BattlePassSchedule cur_schedule = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2605;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BattlePassRewardTakeOption {
    BattlePassRewardTag tag = 1;
    uint32 option_idx = 2;
}

message TakeBattlePassRewardReq {
    repeated BattlePassRewardTakeOption take_option_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2624;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message TakeBattlePassRewardRsp {
    int32 retcode = 1;
    repeated BattlePassRewardTakeOption take_option_list = 2;
    repeated ItemParam item_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2632;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message TakeBattlePassMissionPointReq {
    repeated uint32 mission_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2607;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message TakeBattlePassMissionPointRsp {
    int32 retcode = 1;
    repeated uint32 mission_id_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2615;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetBattlePassProductReq {
    uint32 battle_pass_product_play_type = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2647;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetBattlePassProductRsp {
    int32 retcode = 1;
    uint32 battle_pass_product_play_type = 2;
    uint32 cur_schedule_id = 3;
    string product_id = 4;
    string price_tier = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2650;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SetBattlePassViewedReq {
    uint32 schedule_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2644;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SetBattlePassViewedRsp {
    int32 retcode = 1;
    uint32 schedule_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2609;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BattlePassBuySuccNotify {
    uint32 schedule_id = 1;
    uint32 product_play_type = 2;
    repeated ItemParam item_list = 3;
    uint32 add_point = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2630;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BuyBattlePassLevelReq {
    uint32 buy_level = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2638;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message BuyBattlePassLevelRsp {
    int32 retcode = 1;
    uint32 buy_level = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2634;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum BattlePassUnlockStatus {
    BATTLE_PASS_UNLOCK_INVALID = 0;
    BATTLE_PASS_UNLOCK_FREE = 1;
    BATTLE_PASS_UNLOCK_PAID = 2;
}
