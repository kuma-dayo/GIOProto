syntax = "proto3";

package proto;

import "define.proto";

message GetActivityScheduleReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2001;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityScheduleInfo {
    uint32 activity_id = 1;
    bool is_open = 2;
    uint32 schedule_id = 3;
    uint32 begin_time = 4;
    uint32 end_time = 5;
    bool has_reward = 6;
}

message GetActivityScheduleRsp {
    int32 retcode = 1;
    repeated ActivityScheduleInfo activity_schedule_list = 2;
    uint32 remain_fly_sea_lamp_num = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2002;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetActivityInfoReq {
    repeated uint32 activity_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2003;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityInfo {
    uint32 activity_id = 1;
    uint32 schedule_id = 2;
    uint32 begin_time = 3;
    uint32 end_time = 4;
    uint32 activity_type = 5;
    bool is_play_open_anim = 6;
    bool is_finished = 7;
    bool is_starting = 8;
    repeated ActivityWatcherInfo watcher_info_list = 9;
    
    oneof detail {
        SeaLampActivityDetailInfo sam_lamp_info = 11;
        CrucibleActivityDetailInfo crucible_info = 12;
    }
}

message GetActivityInfoRsp {
    int32 retcode = 1;
    repeated ActivityInfo activity_info_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2004;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ActivityPlayOpenAnimNotify {
    uint32 activity_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2005;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityInfoNotify {
    ActivityInfo activity_info = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2006;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityScheduleInfoNotify {
    repeated ActivityScheduleInfo activity_schedule_list = 1;
    uint32 remain_fly_sea_lamp_num = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2007;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityWatcherInfo {
    uint32 watcher_id = 1;
    uint32 cur_progress = 2;
    uint32 total_progress = 3;
    bool is_taken_reward = 4;
}

message ActivityTakeWatcherRewardReq {
    uint32 activity_id = 1;
    uint32 watcher_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2008;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ActivityTakeWatcherRewardRsp {
    int32 retcode = 1;
    uint32 activity_id = 2;
    uint32 watcher_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2009;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ActivityUpdateWatcherNotify {
    uint32 activity_id = 1;
    ActivityWatcherInfo watcher_info = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2010;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SeaLampActivityDetailInfo {
    uint32 phase_id = 1;
    uint32 progress = 2;
    uint32 days = 3;
    uint32 contribution = 4;
    repeated uint32 taken_contribution_reward_list = 5;
    repeated uint32 taken_phase_reward_list = 6;
    uint32 factor = 7;
}

message SeaLampFlyLampReq {
    uint32 item_id = 1;
    string wish_text = 2;
    uint32 item_num = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2014;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SeaLampFlyLampRsp {
    int32 retcode = 1;
    uint32 total_contribution = 2;
    uint32 remain_fly_num = 3;
    uint32 add_contribution = 4;
    uint32 add_progress = 5;
    uint32 item_num = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2015;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SeaLampTakeContributionRewardReq {
    uint32 config_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2016;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SeaLampTakeContributionRewardRsp {
    int32 retcode = 1;
    uint32 config_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2017;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SeaLampTakePhaseRewardReq {
    uint32 phase_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2018;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SeaLampTakePhaseRewardRsp {
    int32 retcode = 1;
    uint32 phase_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2019;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SeaLampContributeItemReq {
    repeated ItemParam item_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2020;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SeaLampContributeItemRsp {
    int32 retcode = 1;
    uint32 total_contribution = 2;
    uint32 add_contribution = 3;
    uint32 add_progress = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2021;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AnnounceData {
    uint32 config_id = 1;
    uint32 begin_time = 2;
    uint32 end_time = 3;
    string center_system_text = 4;
    string count_down_text = 5;
    string dungeon_confirm_text = 6;
    uint32 center_system_frequency = 7;
    uint32 count_down_frequency = 8;
}

message LoadActivityTerrainNotify {
    uint32 activity_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2024;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ServerAnnounceNotify {
    repeated AnnounceData announce_data_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2022;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ServerAnnounceRevokeNotify {
    repeated uint32 config_id_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2023;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message CrucibleBattleUidInfo {
    uint32 uid = 1;
    string nickname = 2;
    uint32 icon = 3;
    string online_id = 4;
}

message CrucibleActivityDetailInfo {
    uint32 cost_time = 1;
    repeated CrucibleBattleUidInfo uid_info_list = 2;
    Vector pos = 3;
}
