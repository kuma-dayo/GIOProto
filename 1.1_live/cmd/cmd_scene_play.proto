syntax = "proto3";

package proto;

message ScenePlayBattleInfo {
    uint32 play_id = 1;
    uint32 play_type = 2;
    uint32 state = 3;
    uint32 prepare_end_time = 4;
    uint32 start_time = 5;
    uint32 duration = 6;
    repeated uint32 progress_stage_list = 7;
    uint32 progress = 8;
    uint32 mode = 9;
}

message ScenePlayBattleInfoNotify {
    ScenePlayBattleInfo battle_info = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4351;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayOwnerCheckReq {
    uint32 play_id = 1;
    bool is_skip_match = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4352;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ScenePlayOwnerCheckRsp {
    int32 retcode = 1;
    uint32 play_id = 2;
    bool is_skip_match = 3;
    uint32 wrong_uid = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4353;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayOwnerStartInviteReq {
    uint32 play_id = 1;
    bool is_skip_match = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4354;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ScenePlayOwnerStartInviteRsp {
    int32 retcode = 1;
    uint32 play_id = 2;
    bool is_skip_match = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4355;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayOwnerInviteNotify {
    uint32 play_id = 1;
    uint32 invite_cd = 2;
    bool is_remain_reward = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4356;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayGuestReplyInviteReq {
    uint32 play_id = 1;
    bool is_agree = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4357;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ScenePlayGuestReplyInviteRsp {
    int32 retcode = 1;
    uint32 play_id = 2;
    bool is_agree = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4358;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayGuestReplyNotify {
    uint32 play_id = 1;
    uint32 guest_uid = 2;
    bool is_agree = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4359;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayInviteResultNotify {
    uint32 play_id = 1;
    bool is_all_argee = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4360;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayInfo {
    uint32 play_id = 1;
    uint32 play_type = 2;
    uint32 entry_id = 3;
    bool is_open = 4;
}

message ScenePlayInfoListNotify {
    repeated ScenePlayInfo play_info_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4361;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayBattleInterruptNotify {
    uint32 play_id = 1;
    uint32 play_type = 2;
    uint32 interrupt_state = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4362;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayBattleResultNotify {
    uint32 play_id = 1;
    uint32 play_type = 2;
    bool is_win = 3;
    uint32 cost_time = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4363;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayBattleUidOpNotify {
    uint32 play_id = 1;
    uint32 play_type = 2;
    uint32 entity_id = 3;
    repeated uint32 uid_list = 4;
    uint32 op = 5;
    string param_str = 6;
    repeated uint32 param_list = 7;
    repeated uint32 param_target_list = 8;
    uint32 param_index = 9;
    uint32 param_duration = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4364;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayBattleInfoListNotify {
    repeated ScenePlayBattleInfo battle_info_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4365;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ScenePlayOutofRegionNotify {
    uint32 play_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4366;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

enum ScenePlayBattleState {
    SCENE_PLAY_BATTLE_NONE = 0;
    SCENE_PLAY_BATTLE_INIT = 1;
    SCENE_PLAY_BATTLE_PREPARE = 2;
    SCENE_PLAY_BATTLE_READY = 3;
    SCENE_PLAY_BATTLE_PRESTART = 4;
    SCENE_PLAY_BATTLE_START = 5;
    SCENE_PLAY_BATTLE_STOP = 6;
}
