syntax = "proto3";

package proto;

import "define.proto";

message AnchorPointData {
    uint32 anchor_point_id = 1;
    Vector pos = 2;
    Vector rot = 3;
    uint32 end_time = 4;
    uint32 scene_id = 5;
}

message AnchorPointDataNotify {
    repeated AnchorPointData anchor_point_list = 1;
    uint32 next_usable_time = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4285;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AnchorPointOpReq {
    uint32 anchor_point_op_type = 1;
    uint32 anchor_point_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4298;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
    
    enum AnchorPointOpType {
        ANCHOR_POINT_OP_NONE = 0;
        ANCHOR_POINT_OP_TELEPORT = 1;
        ANCHOR_POINT_OP_REMOVE = 2;
    }
}

message AnchorPointOpRsp {
    int32 retcode = 1;
    uint32 anchor_point_op_type = 2;
    uint32 anchor_point_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4263;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message LunchBoxData {
    map<uint32, uint32> slot_material_map = 1;
}

message SetUpLunchBoxWidgetReq {
    LunchBoxData lunch_box_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4286;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SetUpLunchBoxWidgetRsp {
    int32 retcode = 1;
    LunchBoxData lunch_box_data = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4293;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message OneoffGatherPointDetectorData {
    uint32 material_id = 1;
    bool is_all_collected = 2;
    bool is_hint_valid = 3;
    Vector hint_center_pos = 4;
    uint32 hint_radius = 5;
    uint32 group_id = 6;
    uint32 config_id = 7;
}

message ClientCollectorData {
    uint32 material_id = 1;
    uint32 max_points = 2;
    uint32 curr_points = 3;
}

message TreasureMapDetectorData {
    uint32 region_id = 1;
    repeated Vector spot_list = 2;
    Vector center_pos = 3;
    uint32 radius = 4;
    bool is_region_detected = 5;
}

message SkyCrystalDetectorData {
    bool is_hint_valid = 1;
    Vector hint_center_pos = 2;
    uint32 group_id = 3;
    uint32 config_id = 4;
}

message SkyCrystalDetectorQuickUseResult {
    int32 retcode = 1;
    SkyCrystalDetectorData sky_crystal_detector_data = 2;
}

message WidgetCameraInfo {
    uint32 target_entity_id = 1;
}

message WidgetThunderBirdFeatherInfo {
    repeated uint32 entity_id_list = 1;
}

message QuickUseWidgetReq {
    oneof param {
        WidgetCreateLocationInfo location_info = 20;
        WidgetCameraInfo camera_info = 21;
        WidgetCreatorInfo creator_info = 22;
        WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 23;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4276;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuickUseWidgetRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    
    oneof param {
        OneoffGatherPointDetectorData detector_data = 3;
        ClientCollectorData client_collector_data = 4;
        SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 2603;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4265;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetCoolDownData {
    uint32 id = 1;
    uint64 cool_down_time = 2;
    bool is_success = 3;
}

message WidgetCoolDownNotify {
    repeated WidgetCoolDownData group_cool_down_data_list = 1;
    repeated WidgetCoolDownData normal_cool_down_data_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4277;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetReportReq {
    uint32 material_id = 1;
    bool is_clear_hint = 2;
    bool is_client_collect = 3;
    bool is_clear_sky_crystal_hint = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4287;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message WidgetReportRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4256;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ClientCollectorDataNotify {
    repeated ClientCollectorData client_collector_data_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4262;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message OneoffGatherPointDetectorDataNotify {
    repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4289;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SkyCrystalDetectorDataUpdateNotify {
    SkyCrystalDetectorData sky_crystal_detector_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4271;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message TreasureMapDetectorDataNotify {
    TreasureMapDetectorData data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4272;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetSlotData {
    WidgetSlotTag tag = 1;
    uint32 material_id = 2;
    uint32 cd_over_time = 3;
    bool is_active = 4;
}

message SetWidgetSlotReq {
    WidgetSlotOp op = 2;
    repeated WidgetSlotTag tag_list = 3;
    uint32 material_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4266;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SetWidgetSlotRsp {
    int32 retcode = 1;
    WidgetSlotOp op = 2;
    repeated WidgetSlotTag tag_list = 3;
    uint32 material_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4279;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetSlotChangeNotify {
    WidgetSlotOp op = 1;
    WidgetSlotData slot = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4299;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetWidgetSlotReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4258;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetWidgetSlotRsp {
    int32 retcode = 1;
    repeated WidgetSlotData slot_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4294;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AllWidgetDataNotify {
    repeated AnchorPointData anchor_point_list = 2;
    uint32 next_anchor_point_usable_time = 3;
    LunchBoxData lunch_box_data = 5;
    repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 6;
    repeated ClientCollectorData client_collector_data_list = 7;
    repeated WidgetCoolDownData cool_down_group_data_list = 8;
    repeated WidgetCoolDownData normal_cool_down_data_list = 9;
    repeated WidgetSlotData slot_list = 11;
    SkyCrystalDetectorData sky_crystal_detector_data = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4284;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message UseWidgetCreateGadgetReq {
    uint32 material_id = 1;
    Vector pos = 2;
    Vector rot = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4278;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message UseWidgetCreateGadgetRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4290;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message UseWidgetRetractGadgetReq {
    uint32 entity_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4255;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message UseWidgetRetractGadgetRsp {
    int32 retcode = 1;
    uint32 entity_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4297;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message WidgetGadgetData {
    uint32 gadget_id = 1;
    repeated uint32 gadget_entity_id_list = 3;
}

message WidgetGadgetAllDataNotify {
    repeated WidgetGadgetData widget_gadget_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4260;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetGadgetDataNotify {
    WidgetGadgetData widget_gadget_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4268;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetGadgetDestroyNotify {
    uint32 entity_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4282;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetCreateLocationInfo {
    Vector pos = 1;
    Vector rot = 2;
}

message WidgetCreatorInfo {
    WidgetCreatorOpType op_type = 1;
    uint32 entity_id = 2;
    WidgetCreateLocationInfo location_info = 3;
}

message WidgetDoBagReq {
    uint32 material_id = 1;
    
    oneof op_info {
        WidgetCreateLocationInfo location_info = 20;
        WidgetCreatorInfo widget_creator_info = 21;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4269;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message WidgetDoBagRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4270;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetActiveChangeNotify {
    repeated WidgetSlotData widget_data_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4273;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetUseAttachAbilityGroupChangeNotify {
    uint32 material_id = 1;
    bool is_attach = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4257;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetCaptureAnimalReq {
    uint32 material_id = 1;
    uint32 entity_id = 2;
    Vector pos = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4259;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message WidgetCaptureAnimalRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    uint32 entity_id = 3;
    Vector pos = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4261;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message WidgetUpdateExtraCDReq {
    uint32 material_id = 1;
    WIDGET_EXTRA_CD_TYPE extra_cd_type = 2;
    uint32 cd_group = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 6098;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message WidgetUpdateExtraCDRsp {
    int32 retcode = 1;
    uint32 material_id = 2;
    WIDGET_EXTRA_CD_TYPE extra_cd_type = 3;
    uint32 cd_group = 4;
    WidgetCoolDownData cool_data = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5922;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FireworksReformParam {
    FireworksReformParamType type = 1;
    int32 value = 2;
}

message FireworksReformData {
    uint32 id = 1;
    repeated FireworksReformParam reform_param_list = 2;
}

message FireworksReformDataNotify {
    repeated FireworksReformData fireworks_reform_data_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 6064;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ReformFireworksReq {
    FireworksReformData fireworks_reform_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5984;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ReformFireworksRsp {
    int32 retcode = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 6003;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FireworksLaunchParam {
    FireworksLaunchParamType type = 1;
    int32 value = 2;
}

message FireworksLaunchSchemeData {
    uint32 scheme_id = 1;
    repeated uint32 fireworks_id_list = 2;
    repeated FireworksLaunchParam launch_param_list = 3;
}

message LaunchFireworksReq {
    FireworksLaunchSchemeData scheme_data = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 6070;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message LaunchFireworksRsp {
    int32 retcode = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 6094;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FireworksLaunchDataNotify {
    uint32 last_use_scheme_id = 1;
    repeated FireworksLaunchSchemeData scheme_data_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 5950;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum LunchBoxSlotType {
    LUNCH_BOX_SLOT_NONE = 0;
    LUNCH_BOX_SLOT_REVIVE = 1;
    LUNCH_BOX_SLOT_HEAL = 2;
}

enum WidgetSlotTag {
    WIDGET_SLOT_QUICK_USE = 0;
    WIDGET_SLOT_ATTACH_AVATAR = 1;
}

enum WidgetSlotOp {
    WIDGET_SLOT_OP_ATTACH = 0;
    WIDGET_SLOT_OP_DETACH = 1;
}

enum WidgetCreatorOpType {
    WIDGET_CREATOR_TYPE_NONE = 0;
    WIDGET_CREATOR_TYPE_RETRACT = 1;
    WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE = 2;
}

enum WIDGET_EXTRA_CD_TYPE {
    WIDGET_EXTRA_CD_TYPE_NONE = 0;
    WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED = 1;
}

enum FireworksReformParamType {
    FIREWORKS_REFORM_PARAM_NONE = 0;
    FIREWORKS_REFORM_PARAM_COLOR = 1;
    FIREWORKS_REFORM_PARAM_HEIGHT = 2;
    FIREWORKS_REFORM_PARAM_SIZE = 3;
    FIREWORKS_REFORM_PARAM_DENSITY = 4;
    FIREWORKS_REFORM_PARAM_ROTATION = 5;
}

enum FireworksLaunchParamType {
    FIREWORKS_LAUNCH_PARAM_NONE = 0;
    FIREWORKS_LAUNCH_PARAM_REPEAT = 1;
    FIREWORKS_LAUNCH_PARAM_INTEVAL = 2;
    FIREWORKS_LAUNCH_PARAM_DELAY = 3;
    FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL = 4;
    FIREWORKS_LAUNCH_PARAM_MAX = 5;
}
