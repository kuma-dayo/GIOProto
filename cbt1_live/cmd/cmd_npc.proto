syntax = "proto3";

package proto;

import "define.proto";

message NpcTalkReq {
    uint32 npc_entity_id = 1;
    NpcTalkType talk_type = 2;
    uint32 talk_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 501;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message NpcTalkRsp {
    int32 retcode = 1;
    uint32 npc_entity_id = 2;
    NpcTalkType talk_type = 3;
    uint32 cur_talk_id = 4;
    repeated uint32 next_talk_list = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 502;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message NpcTalkStateNotify {
    repeated NpcTalkInfo talk_info_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 503;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetSceneNpcPostionReq {
    uint32 scene_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 504;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetSceneNpcPostionRsp {
    int32 retcode = 1;
    uint32 scene_id = 2;
    repeated NpcPostionInfo npc_info_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 505;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum NpcTalkType {
    TALK_NONE = 0;
    TALK_START = 1;
    TALK_CHOOSE = 2;
    TALK_NEXT = 3;
    TALK_FINISH = 4;
}
