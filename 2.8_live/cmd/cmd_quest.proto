syntax = "proto3";

package proto;

import "define.proto";

message QuestListNotify {
    repeated Quest quest_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 472;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestListUpdateNotify {
    repeated Quest quest_list = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 498;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestDelNotify {
    uint32 quest_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 412;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ChildQuest {
    uint32 quest_config_id = 8;
    uint32 state = 4;
    uint32 quest_id = 15;
}

message ParentQuestRandomInfo {
    repeated uint32 factor_list = 1;
    uint32 template_id = 8;
    uint32 entrance_id = 2;
}

message ParentQuest {
    ParentQuestRandomInfo random_info = 12;
    uint32 quest_var_seq = 11;
    repeated int32 quest_var = 14;
    uint64 video_key = 6;
    bool is_random = 13;
    uint32 parent_quest_id = 3;
    bool is_finished = 7;
    map<uint32, uint32> time_var_map = 8;
    uint32 parent_quest_state = 1;
    repeated ChildQuest child_quest_list = 9;
}

message FinishedParentQuestNotify {
    repeated ParentQuest parent_quest_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 435;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message FinishedParentQuestUpdateNotify {
    repeated ParentQuest parent_quest_list = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 407;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AddQuestContentProgressReq {
    uint32 content_type = 6;
    uint32 param = 12;
    uint32 add_progress = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 421;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message AddQuestContentProgressRsp {
    int32 retcode = 13;
    uint32 content_type = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 403;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetQuestTalkHistoryReq {
    uint32 parent_quest_id = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 490;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetQuestTalkHistoryRsp {
    repeated uint32 talk_id_list = 13;
    uint32 parent_quest_id = 7;
    int32 retcode = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 473;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestCreateEntityReq {
    uint32 parent_quest_id = 9;
    bool is_rewind = 3;
    uint32 quest_id = 2;
    CreateEntityInfo entity = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 499;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuestCreateEntityRsp {
    uint32 quest_id = 13;
    int32 retcode = 8;
    uint32 entity_id = 7;
    CreateEntityInfo entity = 11;
    uint32 parent_quest_id = 1;
    bool is_rewind = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 431;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestDestroyEntityReq {
    uint32 scene_id = 2;
    uint32 entity_id = 9;
    uint32 quest_id = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 475;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuestDestroyEntityRsp {
    uint32 quest_id = 14;
    uint32 scene_id = 9;
    uint32 entity_id = 12;
    int32 retcode = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 448;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ChapterStateNotify {
    ChapterState chapter_state = 9;
    
    NeedPlayerLevel need_player_level = 10;
    message NeedPlayerLevel {
        bool is_limit = 2;
        uint32 config_need_player_level = 11;
    }
    
    NeedBeginTime need_begin_time = 1;
    message NeedBeginTime {
        uint32 config_need_begin_time = 3;
        bool is_limit = 7;
    }
    
    uint32 chapter_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 405;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestProgressUpdateNotify {
    uint32 quest_id = 12;
    repeated uint32 fail_progress_list = 6;
    repeated uint32 finish_progress_list = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 482;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestVarOp {
    uint32 index = 9;
    int32 value = 5;
    bool is_add = 6;
}

message QuestUpdateQuestVarReq {
    uint32 parent_quest_id = 9;
    repeated QuestVarOp quest_var_op_list = 4;
    uint32 quest_id = 11;
    uint32 parent_quest_var_seq = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 447;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuestUpdateQuestVarRsp {
    int32 retcode = 10;
    uint32 parent_quest_var_seq = 2;
    uint32 parent_quest_id = 8;
    uint32 quest_id = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 439;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestUpdateQuestVarNotify {
    repeated int32 quest_var = 1;
    uint32 parent_quest_id = 12;
    uint32 parent_quest_var_seq = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 453;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestDestroyNpcReq {
    uint32 npc_id = 1;
    uint32 parent_quest_id = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 422;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuestDestroyNpcRsp {
    uint32 npc_id = 12;
    uint32 parent_quest_id = 4;
    int32 retcode = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 465;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BargainSnapshot {
    uint32 expected_price = 3;
    int32 cur_mood = 14;
    uint32 price_low_limit = 2;
    uint32 bargain_id = 5;
}

message BargainStartNotify {
    uint32 bargain_id = 4;
    BargainSnapshot snapshot = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 404;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BargainOfferPriceReq {
    uint32 bargain_id = 4;
    uint32 price = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 493;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message BargainOfferPriceRsp {
    int32 retcode = 5;
    uint32 result_param = 13;
    BargainResultType bargain_result = 14;
    int32 cur_mood = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 427;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BargainTerminateNotify {
    uint32 bargain_id = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 494;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetBargainDataReq {
    uint32 bargain_id = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 488;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetBargainDataRsp {
    int32 retcode = 1;
    uint32 bargain_id = 14;
    BargainSnapshot snapshot = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 426;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetAllActivatedBargainDataReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 463;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetAllActivatedBargainDataRsp {
    repeated BargainSnapshot snapshot_list = 5;
    int32 retcode = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 495;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ServerCondMeetQuestListUpdateNotify {
    repeated uint32 del_quest_id_list = 1;
    repeated uint32 add_quest_id_list = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 406;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestGlobalVar {
    int32 value = 8;
    uint32 key = 4;
}

message QuestGlobalVarNotify {
    repeated QuestGlobalVar var_list = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 434;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestTransmitReq {
    uint32 point_id = 15;
    uint32 quest_id = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 450;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QuestTransmitRsp {
    uint32 point_id = 12;
    int32 retcode = 5;
    uint32 quest_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 443;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PersonalLineAllDataReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 474;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message LockedPersonallineData {
    LockReason lock_reason = 2;
    enum LockReason {
        LEVEL = 0;
        QUEST = 1;
    }
    
    uint32 personal_line_id = 13;
    
    oneof param {
        uint32 chapter_id = 3;
        uint32 level = 1;
    }
}

message PersonalLineAllDataRsp {
    uint32 cur_finished_daily_task_count = 5;
    repeated uint32 can_be_unlocked_personal_line_list = 13;
    int32 retcode = 15;
    repeated uint32 ongoing_personal_line_list = 8;
    uint32 legendary_key_count = 11;
    repeated LockedPersonallineData locked_personal_line_list = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 476;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message RedeemLegendaryKeyReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 446;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message RedeemLegendaryKeyRsp {
    uint32 legendary_key_count = 11;
    int32 retcode = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 441;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message UnlockPersonalLineReq {
    uint32 personal_line_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 449;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message UnlockPersonalLineRsp {
    int32 retcode = 4;
    uint32 personal_line_id = 10;
    
    oneof param {
        uint32 level = 11;
        uint32 chapter_id = 6;
    }
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 491;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message CancelFinishParentQuestNotify {
    uint32 parent_quest_id = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 424;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QuestUpdateQuestTimeVarNotify {
    map<uint32, uint32> time_var_map = 1;
    uint32 parent_quest_id = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 456;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PersonalLineNewUnlockNotify {
    repeated uint32 personal_line_id_list = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 442;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message NpcTalkStateNotify {
    bool is_ban = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 430;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetQuestLackingResourceReq {
    uint32 quest_id = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 467;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetQuestLackingResourceRsp {
    uint32 quest_id = 4;
    int32 retcode = 11;
    repeated uint32 lacked_npc_list = 8;
    repeated uint32 lacked_place_list = 5;
    map<uint32, uint32> lacked_npc_map = 10;
    map<uint32, uint32> lacked_place_map = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 458;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetParentQuestVideoKeyReq {
    uint32 parent_quest_id = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 470;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetParentQuestVideoKeyRsp {
    int32 retcode = 1;
    uint64 video_key = 14;
    uint32 parent_quest_id = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 417;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

enum ChapterState {
    CHAPTER_STATE_INVALID = 0;
    CHAPTER_STATE_UNABLE_TO_BEGIN = 1;
    CHAPTER_STATE_BEGIN = 2;
    CHAPTER_STATE_END = 3;
}

enum BargainResultType {
    BARGAIN_COMPLETE_SUCC = 0;
    BARGAIN_SINGLE_FAIL = 1;
    BARGAIN_COMPLETE_FAIL = 2;
}
