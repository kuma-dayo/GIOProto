syntax = "proto3";

package proto;

import "define.proto";

message NpcTalkReq {
    uint32 npc_entity_id = 5;
    uint32 talk_id = 7;
    uint32 entity_id = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 509;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message NpcTalkRsp {
    int32 retcode = 12;
    uint32 npc_entity_id = 9;
    uint32 cur_talk_id = 6;
    uint32 entity_id = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 531;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GetSceneNpcPositionReq {
    uint32 scene_id = 8;
    repeated uint32 npc_id_list = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 537;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GetSceneNpcPositionRsp {
    int32 retcode = 9;
    uint32 scene_id = 15;
    repeated NpcPositionInfo npc_info_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 532;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MetNpcIdListNotify {
    repeated uint32 npc_first_met_id_list = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 517;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message MeetNpcReq {
    uint32 npc_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 585;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message MeetNpcRsp {
    int32 retcode = 13;
    uint32 npc_first_met_id = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 535;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
