syntax = "proto3";

package proto;

import "define.proto";

message GetGachaInfoReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1509;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GachaUpInfo {
    uint32 item_parent_type = 1;
    repeated uint32 item_id_list = 2;
}

message GachaInfo {
    uint32 gacha_type = 1;
    uint32 schedule_id = 2;
    uint32 begin_time = 3;
    uint32 end_time = 4;
    uint32 cost_item_id = 5;
    uint32 cost_item_num = 6;
    string gacha_prefab_path = 7;
    string gacha_prob_url = 8;
    string gacha_record_url = 9;
    string gacha_preview_prefab_path = 10;
    uint32 ten_cost_item_id = 11;
    uint32 ten_cost_item_num = 12;
    uint32 left_gacha_times = 13;
    uint32 gacha_times_limit = 14;
    uint32 gacha_sort_id = 15;
    string gacha_prob_url_oversea = 16;
    string gacha_record_url_oversea = 17;
    repeated GachaUpInfo gacha_up_info_list = 18;
    string title_textmap = 19;
    repeated uint32 display_up5_item_list = 20;
    repeated uint32 display_up4_item_list = 21;
    uint32 wish_item_id = 22;
    uint32 wish_progress = 23;
    uint32 wish_max_progress = 24;
    bool is_new_wish = 25;
}

message GetGachaInfoRsp {
    int32 retcode = 14;
    repeated GachaInfo gacha_info_list = 12;
    uint32 gacha_random = 13;
    uint32 daily_gacha_times = 7;
    bool is_under_minors_restrict = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1531;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message DoGachaReq {
    uint32 gacha_type = 10;
    uint32 gacha_times = 15;
    uint32 gacha_random = 5;
    uint32 gacha_schedule_id = 6;
    string gacha_tag = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1541;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GachaTransferItem {
    ItemParam item = 1;
    bool is_transfer_item_new = 2;
}

message GachaItem {
    ItemParam gacha_item = 1;
    repeated GachaTransferItem transfer_items = 2;
    bool is_flash_card = 3;
    bool is_gacha_item_new = 4;
    repeated ItemParam token_item_list = 5;
}

message DoGachaRsp {
    int32 retcode = 9;
    uint32 gacha_type = 11;
    uint32 gacha_times = 3;
    uint32 gacha_schedule_id = 4;
    repeated GachaItem gacha_item_list = 2;
    uint32 new_gacha_random = 8;
    uint32 cost_item_id = 6;
    uint32 cost_item_num = 1;
    uint32 ten_cost_item_id = 14;
    uint32 ten_cost_item_num = 7;
    uint32 left_gacha_times = 15;
    uint32 gacha_times_limit = 13;
    uint32 wish_item_id = 10;
    uint32 wish_progress = 5;
    uint32 wish_max_progress = 12;
    uint32 daily_gacha_times = 1679;
    bool is_under_minors_restrict = 1561;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1537;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GachaWishReq {
    uint32 gacha_type = 2;
    uint32 gacha_schedule_id = 4;
    uint32 item_id = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1532;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GachaWishRsp {
    int32 retcode = 7;
    uint32 gacha_type = 14;
    uint32 gacha_schedule_id = 15;
    uint32 wish_item_id = 3;
    uint32 wish_progress = 12;
    uint32 wish_max_progress = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1517;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GachaOpenWishNotify {
    uint32 gacha_type = 3;
    uint32 gacha_schedule_id = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1585;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GachaSimpleInfoNotify {
    bool is_new = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1535;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
