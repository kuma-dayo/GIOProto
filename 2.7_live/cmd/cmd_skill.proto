syntax = "proto3";

package proto;

import "define.proto";

message UnlockAvatarTalentReq {
    uint64 avatar_guid = 13;
    uint32 talent_id = 9;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1009;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message UnlockAvatarTalentRsp {
    int32 retcode = 2;
    uint64 avatar_guid = 14;
    uint32 talent_id = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1031;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarUnlockTalentNotify {
    uint64 avatar_guid = 1;
    uint32 entity_id = 15;
    uint32 talent_id = 13;
    uint32 skill_depot_id = 14;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1041;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarSkillDepotChangeNotify {
    uint64 avatar_guid = 2;
    uint32 entity_id = 8;
    uint32 skill_depot_id = 9;
    repeated uint32 talent_id_list = 1;
    repeated uint32 proud_skill_list = 5;
    uint32 core_proud_skill_level = 4;
    map<uint32, uint32> skill_level_map = 10;
    map<uint32, uint32> proud_skill_extra_level_map = 11;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1037;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message BigTalentPointConvertReq {
    uint64 avatar_guid = 15;
    repeated uint64 item_guid_list = 3;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1032;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message BigTalentPointConvertRsp {
    int32 retcode = 8;
    uint64 avatar_guid = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1017;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarSkillMaxChargeCountNotify {
    uint64 avatar_guid = 15;
    uint32 skill_id = 2;
    uint32 max_charge_count = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1085;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarSkillInfoNotify {
    uint64 guid = 4;
    map<uint32, AvatarSkillInfo> skill_map = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1035;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ProudSkillUpgradeReq {
    uint64 avatar_guid = 14;
    uint32 proud_skill_id = 12;
    uint32 old_proud_skill_level = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1049;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ProudSkillUpgradeRsp {
    int32 retcode = 10;
    uint64 avatar_guid = 13;
    uint32 proud_skill_id = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1082;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ProudSkillChangeNotify {
    uint64 avatar_guid = 12;
    uint32 entity_id = 11;
    uint32 skill_depot_id = 7;
    repeated uint32 proud_skill_list = 4;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1055;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarSkillUpgradeReq {
    uint64 avatar_guid = 1;
    uint32 avatar_skill_id = 5;
    uint32 old_level = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1027;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message AvatarSkillUpgradeRsp {
    int32 retcode = 3;
    uint64 avatar_guid = 10;
    uint32 avatar_skill_id = 2;
    uint32 old_level = 5;
    uint32 cur_level = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1007;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarSkillChangeNotify {
    uint64 avatar_guid = 4;
    uint32 entity_id = 15;
    uint32 skill_depot_id = 5;
    uint32 avatar_skill_id = 2;
    uint32 old_level = 10;
    uint32 cur_level = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1030;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ProudSkillExtraLevelNotify {
    uint64 avatar_guid = 14;
    uint32 talent_type = 10;
    uint32 talent_index = 4;
    uint32 extra_level = 5;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1097;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message CanUseSkillNotify {
    bool is_can_use_skill = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1098;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message AvatarTeamResonanceInfo {
    uint32 entity_id = 1;
    uint64 avatar_guid = 2;
    repeated uint32 add_team_resonance_id_list = 3;
    repeated uint32 del_team_resonance_id_list = 4;
}

message TeamResonanceChangeNotify {
    repeated AvatarTeamResonanceInfo info_list = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 1045;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
