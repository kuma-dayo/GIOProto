syntax = "proto3";

package proto;

import "define.proto";

message QueryFilter {
    int32 type_id = 1;
    int32 area_mask = 2;
}

message QueryPathReq {
    OptionType query_type = 9;
    enum OptionType {
        OPTION_NONE = 0;
        OPTION_NORMAL = 1;
        OPTION_FIRST_CAN_GO = 2;
    }
    
    int32 query_id = 4;
    uint32 scene_id = 8;
    Vector source_pos = 14;
    repeated Vector destination_pos = 11;
    QueryFilter filter = 5;
    Vector3Int destination_extend = 7;
    Vector3Int source_extend = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2309;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QueryPathRsp {
    int32 retcode = 14;
    int32 query_id = 2;
    
    PathStatusType query_status = 5;
    enum PathStatusType {
        STATUS_FAIL = 0;
        STATUS_SUCC = 1;
        STATUS_PARTIAL = 2;
    }
    
    repeated Vector corners = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2331;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ObstacleInfo {
    int32 obstacle_id = 1;
    
    ShapeType shape = 2;
    enum ShapeType {
        OBSTACLE_SHAPE_CAPSULE = 0;
        OBSTACLE_SHAPE_BOX = 1;
    }
    
    Vector center = 3;
    MathQuaternion rotation = 4;
    Vector3Int extents = 5;
}

message ObstacleModifyNotify {
    uint32 scene_id = 4;
    repeated ObstacleInfo add_obstacles = 13;
    repeated int32 remove_obstacle_ids = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2341;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PathfindingPingNotify {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2337;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PathfindingEnterSceneReq {
    uint32 scene_id = 8;
    uint32 version = 4;
    repeated ObstacleInfo obstacles = 11;
    bool is_editor = 3;
    repeated uint32 activity_id = 7;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2332;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PathfindingEnterSceneRsp {
    int32 retcode = 8;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2317;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GMShowObstacleReq {
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2393;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message GMShowObstacleRsp {
    int32 retcode = 2;
    repeated ObstacleInfo obstacles = 15;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2360;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message GMShowNavMeshReq {
    Vector center = 1;
    Vector extent = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2377;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message PBNavMeshPoly {
    repeated int32 vects = 1;
    
    repeated EdgeType edge_types = 2;
    enum EdgeType {
        INNER = 0;
        TILE_BOUND = 1;
        TILE_BOUND_UNCONNECT = 2;
        TILE_BOUND_OVERIDE = 3;
    }
    
    int32 area = 3;
}

message PBNavMeshTile {
    repeated Vector vecs = 1;
    repeated PBNavMeshPoly polys = 2;
}

message GMShowNavMeshRsp {
    int32 retcode = 2;
    repeated PBNavMeshTile tiles = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2343;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message PbNavMeshStatsInfo {
    int32 total_authority_ai = 1;
    int32 total_no_authority_ai = 2;
    int32 authority_ai_in_combat = 3;
    int32 no_authority_ai_in_combat = 4;
}

message NavMeshStatsNotify {
    repeated PbNavMeshStatsInfo infos = 6;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 2387;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}
