syntax = "proto3";

package proto;

import "define.proto";

message CodexTypeData {
    CodexType type = 1;
    repeated uint32 codex_id_list = 2;
    repeated bool have_viewed_list = 3;
    map<uint32, uint32> weapon_max_promote_level_map = 4;
}

message CodexDataFullNotify {
    repeated CodexTypeData type_data_list = 5;
    repeated uint32 recent_viewed_pushtips_list = 11;
    uint32 last_read_pushtips_codex_id = 8;
    uint32 last_read_pushtips_type_id = 10;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4201;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message CodexDataUpdateNotify {
    CodexType type = 3;
    uint32 id = 4;
    uint32 weapon_max_promote_level = 12;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4210;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message QueryCodexMonsterBeKilledNumReq {
    repeated uint32 codex_id_list = 11;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4207;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message QueryCodexMonsterBeKilledNumRsp {
    int32 retcode = 1;
    repeated uint32 codex_id_list = 4;
    repeated uint32 be_killed_num_list = 11;
    repeated uint32 be_captured_num_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4205;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message ViewCodexReq {
    repeated CodexTypeData type_data_list = 13;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4203;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message ViewCodexRsp {
    int32 retcode = 4;
    repeated CodexTypeData type_data_list = 11;
    repeated uint32 recent_viewed_pushtips_list = 2;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4202;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}

message SetCodexPushtipsReadReq {
    uint32 codex_id = 10;
    uint32 type_id = 11;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4204;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
        IS_ALLOW_CLIENT = 1;
    }
}

message SetCodexPushtipsReadRsp {
    int32 retcode = 15;
    uint32 codex_id = 12;
    uint32 type_id = 1;
    
    enum CmdId {
        option allow_alias = true;
        NONE = 0;
        CMD_ID = 4208;
        ENET_CHANNEL_ID = 0;
        ENET_IS_RELIABLE = 1;
    }
}
